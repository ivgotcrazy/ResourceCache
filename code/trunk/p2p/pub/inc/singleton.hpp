/*##############################################################################
 * 文件名   : singleton.hpp
 * 创建人   : rosan 
 * 创建时间 : 2013.11.15
 * 文件描述 : 定义了模板单例类 
 * 版权声明 : Copyright(c)2013 BroadInter.All rights reserved.
 * ###########################################################################*/
#ifndef HEADER_SINGLETON
#define HEADER_SINGLETON

namespace BroadCache
{

/*******************************************************************************
 *描  述: 模板单例类
 *作  者: rosan
 *时  间: 2013.11.15
 ******************************************************************************/
template <class T>
class Singleton : private T
{
private:
    Singleton();
    ~Singleton();

public:
    static T &instance();
};

/*------------------------------------------------------------------------------
 * 描  述: Singleton构造函数
 * 参  数:
 * 返回值:
 * 修  改:
 *   时间 2013.11.15
 *   作者 rosan
 *   描述 创建
 -----------------------------------------------------------------------------*/ 
template <class T>
inline Singleton<T>::Singleton()
{
    /* no-op */
}

/*------------------------------------------------------------------------------
 * 描  述: Singleton析构函数
 * 参  数:
 * 返回值:
 * 修  改:
 *   时间 2013.11.15
 *   作者 rosan
 *   描述 创建
 -----------------------------------------------------------------------------*/ 
template <class T>
inline Singleton<T>::~Singleton()
{
    /* no-op */
}

/*------------------------------------------------------------------------------
 * 描  述: 获取单例对象
 * 参  数:
 * 返回值: 单例对象
 * 修  改:
 *   时间 2013.11.15
 *   作者 rosan
 *   描述 创建
 -----------------------------------------------------------------------------*/ 
template <class T>
/*static*/ T &Singleton<T>::instance()
{
    static Singleton<T> s_oT;
    return(s_oT);
}

}  // namespace BroadCache

#endif  // HEADER_SINGLETON
